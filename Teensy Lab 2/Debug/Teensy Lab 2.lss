
Teensy Lab 2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000008  00800100  00000a00  00000a94  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000a00  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800108  00800108  00000a9c  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a9c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000acc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000118  00000000  00000000  00000b0c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b55  00000000  00000000  00000c24  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000c9b  00000000  00000000  00002779  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000127f  00000000  00000000  00003414  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003d4  00000000  00000000  00004694  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000008cf  00000000  00000000  00004a68  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001ae4  00000000  00000000  00005337  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00006e1b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 c4 00 	jmp	0x188	; 0x188 <__ctors_end>
   4:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
   8:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
   c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  10:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  14:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  18:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  1c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  20:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  24:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  28:	0c 94 57 01 	jmp	0x2ae	; 0x2ae <__vector_10>
  2c:	0c 94 95 01 	jmp	0x32a	; 0x32a <__vector_11>
  30:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  34:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  38:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  3c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  40:	0c 94 5c 04 	jmp	0x8b8	; 0x8b8 <__vector_16>
  44:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  48:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  4c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  50:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  54:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  58:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  5c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  60:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  64:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  68:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  6c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  70:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  74:	0c 94 70 04 	jmp	0x8e0	; 0x8e0 <__vector_29>
  78:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  7c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  80:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  84:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  88:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  8c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  90:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  94:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  98:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  9c:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  a0:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  a4:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>
  a8:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__bad_interrupt>

000000ac <__trampolines_end>:
  ac:	0a 00       	.word	0x000a	; ????

000000ae <__c.2647>:
  ae:	64 69 66 66 65 72 65 6e 63 65 3a 20 00              difference: .

000000bb <__c.2645>:
  bb:	0a 00                                               ..

000000bd <__c.2643>:
  bd:	66 61 6c 6c 74 69 6d 65 3a 20 00                    falltime: .

000000c8 <__c.2641>:
  c8:	0a 00                                               ..

000000ca <__c.2639>:
  ca:	72 69 73 65 74 69 6d 65 3a 20 00                    risetime: .

000000d5 <descriptor_list>:
  d5:	00 01 00 00 6c 01 12 00 02 00 00 29 01 43 00 03     ....l......).C..
  e5:	00 00 25 01 04 01 03 09 04 11 01 12 02 03 09 04     ..%.............
  f5:	09 01 06 03 03 09 04 ff 00 08                       ..........

000000ff <string3>:
  ff:	08 03 34 00 31 00 30 00 00 00                       ..4.1.0...

00000109 <string2>:
 109:	06 03 4d 00 32 00 00 00                             ..M.2...

00000111 <string1>:
 111:	12 03 4a 00 2e 00 20 00 46 00 69 00 65 00 6e 00     ..J... .F.i.e.n.
 121:	65 00 00 00                                         e...

00000125 <string0>:
 125:	04 03 09 04                                         ....

00000129 <config1_descriptor>:
 129:	09 02 43 00 02 01 00 c0 32 09 04 00 00 01 02 02     ..C.....2.......
 139:	01 00 05 24 00 10 01 05 24 01 01 01 04 24 02 06     ...$....$....$..
 149:	05 24 06 00 01 07 05 82 03 10 00 40 09 04 01 00     .$.........@....
 159:	02 0a 00 00 00 07 05 03 02 40 00 00 07 05 84 02     .........@......
 169:	40 00 00                                            @..

0000016c <device_descriptor>:
 16c:	12 01 00 02 02 00 00 10 c0 16 7a 04 00 01 01 02     ..........z.....
 17c:	03 01                                               ..

0000017e <endpoint_config_table>:
 17e:	00 01 c1 12 01 80 36 01 81 36                       ......6..6

00000188 <__ctors_end>:
 188:	11 24       	eor	r1, r1
 18a:	1f be       	out	0x3f, r1	; 63
 18c:	cf ef       	ldi	r28, 0xFF	; 255
 18e:	da e0       	ldi	r29, 0x0A	; 10
 190:	de bf       	out	0x3e, r29	; 62
 192:	cd bf       	out	0x3d, r28	; 61

00000194 <__do_copy_data>:
 194:	11 e0       	ldi	r17, 0x01	; 1
 196:	a0 e0       	ldi	r26, 0x00	; 0
 198:	b1 e0       	ldi	r27, 0x01	; 1
 19a:	e0 e0       	ldi	r30, 0x00	; 0
 19c:	fa e0       	ldi	r31, 0x0A	; 10
 19e:	02 c0       	rjmp	.+4      	; 0x1a4 <__do_copy_data+0x10>
 1a0:	05 90       	lpm	r0, Z+
 1a2:	0d 92       	st	X+, r0
 1a4:	a8 30       	cpi	r26, 0x08	; 8
 1a6:	b1 07       	cpc	r27, r17
 1a8:	d9 f7       	brne	.-10     	; 0x1a0 <__do_copy_data+0xc>

000001aa <__do_clear_bss>:
 1aa:	21 e0       	ldi	r18, 0x01	; 1
 1ac:	a8 e0       	ldi	r26, 0x08	; 8
 1ae:	b1 e0       	ldi	r27, 0x01	; 1
 1b0:	01 c0       	rjmp	.+2      	; 0x1b4 <.do_clear_bss_start>

000001b2 <.do_clear_bss_loop>:
 1b2:	1d 92       	st	X+, r1

000001b4 <.do_clear_bss_start>:
 1b4:	a2 31       	cpi	r26, 0x12	; 18
 1b6:	b2 07       	cpc	r27, r18
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <.do_clear_bss_loop>
 1ba:	0e 94 eb 03 	call	0x7d6	; 0x7d6 <main>
 1be:	0c 94 fe 04 	jmp	0x9fc	; 0x9fc <_exit>

000001c2 <__bad_interrupt>:
 1c2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001c6 <m_usb_init>:
	for(i=0;i<10;i++){
        if(string[i]){
            m_usb_tx_char(string[i]);
        }
	}
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	80 93 d7 00 	sts	0x00D7, r24	; 0x8000d7 <__TEXT_REGION_LENGTH__+0x7e00d7>
 1cc:	80 ea       	ldi	r24, 0xA0	; 160
 1ce:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 1d2:	82 e1       	ldi	r24, 0x12	; 18
 1d4:	89 bd       	out	0x29, r24	; 41
 1d6:	09 b4       	in	r0, 0x29	; 41
 1d8:	00 fe       	sbrs	r0, 0
 1da:	fd cf       	rjmp	.-6      	; 0x1d6 <m_usb_init+0x10>
 1dc:	80 e9       	ldi	r24, 0x90	; 144
 1de:	80 93 d8 00 	sts	0x00D8, r24	; 0x8000d8 <__TEXT_REGION_LENGTH__+0x7e00d8>
 1e2:	10 92 e0 00 	sts	0x00E0, r1	; 0x8000e0 <__TEXT_REGION_LENGTH__+0x7e00e0>
 1e6:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <usb_configuration>
 1ea:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <cdc_line_rtsdtr>
 1ee:	8c e0       	ldi	r24, 0x0C	; 12
 1f0:	80 93 e2 00 	sts	0x00E2, r24	; 0x8000e2 <__TEXT_REGION_LENGTH__+0x7e00e2>
 1f4:	78 94       	sei
 1f6:	08 95       	ret

000001f8 <m_usb_tx_char>:
 1f8:	cf 93       	push	r28
 1fa:	df 93       	push	r29
 1fc:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <usb_configuration>
 200:	99 23       	and	r25, r25
 202:	09 f4       	brne	.+2      	; 0x206 <m_usb_tx_char+0xe>
 204:	4c c0       	rjmp	.+152    	; 0x29e <m_usb_tx_char+0xa6>
 206:	9f b7       	in	r25, 0x3f	; 63
 208:	f8 94       	cli
 20a:	24 e0       	ldi	r18, 0x04	; 4
 20c:	20 93 e9 00 	sts	0x00E9, r18	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
 210:	20 91 0b 01 	lds	r18, 0x010B	; 0x80010b <transmit_previous_timeout>
 214:	22 23       	and	r18, r18
 216:	49 f0       	breq	.+18     	; 0x22a <m_usb_tx_char+0x32>
 218:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 21c:	25 fd       	sbrc	r18, 5
 21e:	03 c0       	rjmp	.+6      	; 0x226 <m_usb_tx_char+0x2e>
 220:	9f bf       	out	0x3f, r25	; 63
 222:	8f ef       	ldi	r24, 0xFF	; 255
 224:	41 c0       	rjmp	.+130    	; 0x2a8 <m_usb_tx_char+0xb0>
 226:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <transmit_previous_timeout>
 22a:	30 91 e4 00 	lds	r19, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
 22e:	37 5e       	subi	r19, 0xE7	; 231
 230:	20 91 e8 00 	lds	r18, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 234:	25 fd       	sbrc	r18, 5
 236:	24 c0       	rjmp	.+72     	; 0x280 <m_usb_tx_char+0x88>
 238:	9f bf       	out	0x3f, r25	; 63
 23a:	90 91 e4 00 	lds	r25, 0x00E4	; 0x8000e4 <__TEXT_REGION_LENGTH__+0x7e00e4>
 23e:	39 17       	cp	r19, r25
 240:	81 f0       	breq	.+32     	; 0x262 <m_usb_tx_char+0x6a>
 242:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <usb_configuration>
 246:	99 23       	and	r25, r25
 248:	61 f1       	breq	.+88     	; 0x2a2 <m_usb_tx_char+0xaa>
 24a:	a9 ee       	ldi	r26, 0xE9	; 233
 24c:	b0 e0       	ldi	r27, 0x00	; 0
 24e:	44 e0       	ldi	r20, 0x04	; 4
 250:	e8 ee       	ldi	r30, 0xE8	; 232
 252:	f0 e0       	ldi	r31, 0x00	; 0
 254:	c4 ee       	ldi	r28, 0xE4	; 228
 256:	d0 e0       	ldi	r29, 0x00	; 0
 258:	0d c0       	rjmp	.+26     	; 0x274 <m_usb_tx_char+0x7c>
 25a:	9f bf       	out	0x3f, r25	; 63
 25c:	98 81       	ld	r25, Y
 25e:	39 13       	cpse	r19, r25
 260:	05 c0       	rjmp	.+10     	; 0x26c <m_usb_tx_char+0x74>
 262:	81 e0       	ldi	r24, 0x01	; 1
 264:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <transmit_previous_timeout>
 268:	8f ef       	ldi	r24, 0xFF	; 255
 26a:	1e c0       	rjmp	.+60     	; 0x2a8 <m_usb_tx_char+0xb0>
 26c:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <usb_configuration>
 270:	99 23       	and	r25, r25
 272:	c9 f0       	breq	.+50     	; 0x2a6 <m_usb_tx_char+0xae>
 274:	9f b7       	in	r25, 0x3f	; 63
 276:	f8 94       	cli
 278:	4c 93       	st	X, r20
 27a:	20 81       	ld	r18, Z
 27c:	25 ff       	sbrs	r18, 5
 27e:	ed cf       	rjmp	.-38     	; 0x25a <m_usb_tx_char+0x62>
 280:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
 284:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 288:	85 fd       	sbrc	r24, 5
 28a:	03 c0       	rjmp	.+6      	; 0x292 <m_usb_tx_char+0x9a>
 28c:	8a e3       	ldi	r24, 0x3A	; 58
 28e:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 292:	85 e0       	ldi	r24, 0x05	; 5
 294:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <transmit_flush_timer>
 298:	9f bf       	out	0x3f, r25	; 63
 29a:	80 e0       	ldi	r24, 0x00	; 0
 29c:	05 c0       	rjmp	.+10     	; 0x2a8 <m_usb_tx_char+0xb0>
 29e:	8f ef       	ldi	r24, 0xFF	; 255
 2a0:	03 c0       	rjmp	.+6      	; 0x2a8 <m_usb_tx_char+0xb0>
 2a2:	8f ef       	ldi	r24, 0xFF	; 255
 2a4:	01 c0       	rjmp	.+2      	; 0x2a8 <m_usb_tx_char+0xb0>
 2a6:	8f ef       	ldi	r24, 0xFF	; 255
 2a8:	df 91       	pop	r29
 2aa:	cf 91       	pop	r28
 2ac:	08 95       	ret

000002ae <__vector_10>:
 2ae:	1f 92       	push	r1
 2b0:	0f 92       	push	r0
 2b2:	0f b6       	in	r0, 0x3f	; 63
 2b4:	0f 92       	push	r0
 2b6:	11 24       	eor	r1, r1
 2b8:	8f 93       	push	r24
 2ba:	9f 93       	push	r25
 2bc:	ef 93       	push	r30
 2be:	ff 93       	push	r31
 2c0:	e1 ee       	ldi	r30, 0xE1	; 225
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	80 81       	ld	r24, Z
 2c6:	10 82       	st	Z, r1
 2c8:	83 ff       	sbrs	r24, 3
 2ca:	11 c0       	rjmp	.+34     	; 0x2ee <__vector_10+0x40>
 2cc:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
 2d0:	91 e0       	ldi	r25, 0x01	; 1
 2d2:	90 93 eb 00 	sts	0x00EB, r25	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
 2d6:	10 92 ec 00 	sts	0x00EC, r1	; 0x8000ec <__TEXT_REGION_LENGTH__+0x7e00ec>
 2da:	92 e1       	ldi	r25, 0x12	; 18
 2dc:	90 93 ed 00 	sts	0x00ED, r25	; 0x8000ed <__TEXT_REGION_LENGTH__+0x7e00ed>
 2e0:	98 e0       	ldi	r25, 0x08	; 8
 2e2:	90 93 f0 00 	sts	0x00F0, r25	; 0x8000f0 <__TEXT_REGION_LENGTH__+0x7e00f0>
 2e6:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <usb_configuration>
 2ea:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <cdc_line_rtsdtr>
 2ee:	82 ff       	sbrs	r24, 2
 2f0:	13 c0       	rjmp	.+38     	; 0x318 <__vector_10+0x6a>
 2f2:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <usb_configuration>
 2f6:	88 23       	and	r24, r24
 2f8:	79 f0       	breq	.+30     	; 0x318 <__vector_10+0x6a>
 2fa:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <transmit_flush_timer>
 2fe:	88 23       	and	r24, r24
 300:	59 f0       	breq	.+22     	; 0x318 <__vector_10+0x6a>
 302:	81 50       	subi	r24, 0x01	; 1
 304:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <transmit_flush_timer>
 308:	81 11       	cpse	r24, r1
 30a:	06 c0       	rjmp	.+12     	; 0x318 <__vector_10+0x6a>
 30c:	84 e0       	ldi	r24, 0x04	; 4
 30e:	80 93 e9 00 	sts	0x00E9, r24	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
 312:	8a e3       	ldi	r24, 0x3A	; 58
 314:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 318:	ff 91       	pop	r31
 31a:	ef 91       	pop	r30
 31c:	9f 91       	pop	r25
 31e:	8f 91       	pop	r24
 320:	0f 90       	pop	r0
 322:	0f be       	out	0x3f, r0	; 63
 324:	0f 90       	pop	r0
 326:	1f 90       	pop	r1
 328:	18 95       	reti

0000032a <__vector_11>:
 32a:	1f 92       	push	r1
 32c:	0f 92       	push	r0
 32e:	0f b6       	in	r0, 0x3f	; 63
 330:	0f 92       	push	r0
 332:	11 24       	eor	r1, r1
 334:	0f 93       	push	r16
 336:	1f 93       	push	r17
 338:	2f 93       	push	r18
 33a:	3f 93       	push	r19
 33c:	4f 93       	push	r20
 33e:	5f 93       	push	r21
 340:	6f 93       	push	r22
 342:	7f 93       	push	r23
 344:	8f 93       	push	r24
 346:	9f 93       	push	r25
 348:	af 93       	push	r26
 34a:	bf 93       	push	r27
 34c:	cf 93       	push	r28
 34e:	df 93       	push	r29
 350:	ef 93       	push	r30
 352:	ff 93       	push	r31
 354:	10 92 e9 00 	sts	0x00E9, r1	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
 358:	80 91 e8 00 	lds	r24, 0x00E8	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 35c:	83 ff       	sbrs	r24, 3
 35e:	4f c1       	rjmp	.+670    	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 360:	e1 ef       	ldi	r30, 0xF1	; 241
 362:	f0 e0       	ldi	r31, 0x00	; 0
 364:	a0 81       	ld	r26, Z
 366:	80 81       	ld	r24, Z
 368:	20 81       	ld	r18, Z
 36a:	90 81       	ld	r25, Z
 36c:	30 e0       	ldi	r19, 0x00	; 0
 36e:	39 2b       	or	r19, r25
 370:	40 81       	ld	r20, Z
 372:	90 81       	ld	r25, Z
 374:	50 e0       	ldi	r21, 0x00	; 0
 376:	ba 01       	movw	r22, r20
 378:	79 2b       	or	r23, r25
 37a:	c0 81       	ld	r28, Z
 37c:	d0 81       	ld	r29, Z
 37e:	92 ef       	ldi	r25, 0xF2	; 242
 380:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 384:	86 30       	cpi	r24, 0x06	; 6
 386:	09 f0       	breq	.+2      	; 0x38a <__vector_11+0x60>
 388:	59 c0       	rjmp	.+178    	; 0x43c <__LOCK_REGION_LENGTH__+0x3c>
 38a:	04 c0       	rjmp	.+8      	; 0x394 <__vector_11+0x6a>
 38c:	81 e2       	ldi	r24, 0x21	; 33
 38e:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
 392:	3c c1       	rjmp	.+632    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 394:	45 ed       	ldi	r20, 0xD5	; 213
 396:	50 e0       	ldi	r21, 0x00	; 0
 398:	0f ef       	ldi	r16, 0xFF	; 255
 39a:	10 e0       	ldi	r17, 0x00	; 0
 39c:	ca 01       	movw	r24, r20
 39e:	fa 01       	movw	r30, r20
 3a0:	a5 91       	lpm	r26, Z+
 3a2:	b4 91       	lpm	r27, Z
 3a4:	2a 17       	cp	r18, r26
 3a6:	3b 07       	cpc	r19, r27
 3a8:	09 f5       	brne	.+66     	; 0x3ec <__vector_11+0xc2>
 3aa:	fa 01       	movw	r30, r20
 3ac:	32 96       	adiw	r30, 0x02	; 2
 3ae:	a5 91       	lpm	r26, Z+
 3b0:	b4 91       	lpm	r27, Z
 3b2:	6a 17       	cp	r22, r26
 3b4:	7b 07       	cpc	r23, r27
 3b6:	d1 f4       	brne	.+52     	; 0x3ec <__vector_11+0xc2>
 3b8:	fa 01       	movw	r30, r20
 3ba:	34 96       	adiw	r30, 0x04	; 4
 3bc:	45 91       	lpm	r20, Z+
 3be:	54 91       	lpm	r21, Z
 3c0:	fc 01       	movw	r30, r24
 3c2:	36 96       	adiw	r30, 0x06	; 6
 3c4:	24 91       	lpm	r18, Z
 3c6:	8c 2f       	mov	r24, r28
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	9d 2b       	or	r25, r29
 3cc:	8f 3f       	cpi	r24, 0xFF	; 255
 3ce:	91 05       	cpc	r25, r1
 3d0:	19 f0       	breq	.+6      	; 0x3d8 <__vector_11+0xae>
 3d2:	10 f0       	brcs	.+4      	; 0x3d8 <__vector_11+0xae>
 3d4:	8f ef       	ldi	r24, 0xFF	; 255
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	82 17       	cp	r24, r18
 3da:	08 f4       	brcc	.+2      	; 0x3de <__vector_11+0xb4>
 3dc:	28 2f       	mov	r18, r24
 3de:	a8 ee       	ldi	r26, 0xE8	; 232
 3e0:	b0 e0       	ldi	r27, 0x00	; 0
 3e2:	70 e1       	ldi	r23, 0x10	; 16
 3e4:	6e ef       	ldi	r22, 0xFE	; 254
 3e6:	c1 ef       	ldi	r28, 0xF1	; 241
 3e8:	d0 e0       	ldi	r29, 0x00	; 0
 3ea:	06 c0       	rjmp	.+12     	; 0x3f8 <__vector_11+0xce>
 3ec:	49 5f       	subi	r20, 0xF9	; 249
 3ee:	5f 4f       	sbci	r21, 0xFF	; 255
 3f0:	40 17       	cp	r20, r16
 3f2:	51 07       	cpc	r21, r17
 3f4:	99 f6       	brne	.-90     	; 0x39c <__vector_11+0x72>
 3f6:	ca cf       	rjmp	.-108    	; 0x38c <__vector_11+0x62>
 3f8:	8c 91       	ld	r24, X
 3fa:	98 2f       	mov	r25, r24
 3fc:	95 70       	andi	r25, 0x05	; 5
 3fe:	e1 f3       	breq	.-8      	; 0x3f8 <__vector_11+0xce>
 400:	82 fd       	sbrc	r24, 2
 402:	04 c1       	rjmp	.+520    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 404:	32 2f       	mov	r19, r18
 406:	21 31       	cpi	r18, 0x11	; 17
 408:	08 f0       	brcs	.+2      	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 40a:	37 2f       	mov	r19, r23
 40c:	33 23       	and	r19, r19
 40e:	09 f4       	brne	.+2      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 410:	fa c0       	rjmp	.+500    	; 0x606 <__LOCK_REGION_LENGTH__+0x206>
 412:	fa 01       	movw	r30, r20
 414:	83 2f       	mov	r24, r19
 416:	94 91       	lpm	r25, Z
 418:	98 83       	st	Y, r25
 41a:	81 50       	subi	r24, 0x01	; 1
 41c:	31 96       	adiw	r30, 0x01	; 1
 41e:	81 11       	cpse	r24, r1
 420:	fa cf       	rjmp	.-12     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
 422:	8f ef       	ldi	r24, 0xFF	; 255
 424:	83 0f       	add	r24, r19
 426:	90 e0       	ldi	r25, 0x00	; 0
 428:	01 96       	adiw	r24, 0x01	; 1
 42a:	48 0f       	add	r20, r24
 42c:	59 1f       	adc	r21, r25
 42e:	23 1b       	sub	r18, r19
 430:	6c 93       	st	X, r22
 432:	21 11       	cpse	r18, r1
 434:	e1 cf       	rjmp	.-62     	; 0x3f8 <__vector_11+0xce>
 436:	30 31       	cpi	r19, 0x10	; 16
 438:	f9 f2       	breq	.-66     	; 0x3f8 <__vector_11+0xce>
 43a:	e8 c0       	rjmp	.+464    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 43c:	85 30       	cpi	r24, 0x05	; 5
 43e:	61 f4       	brne	.+24     	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
 440:	8e ef       	ldi	r24, 0xFE	; 254
 442:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 446:	e8 ee       	ldi	r30, 0xE8	; 232
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z
 44c:	80 ff       	sbrs	r24, 0
 44e:	fd cf       	rjmp	.-6      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 450:	20 68       	ori	r18, 0x80	; 128
 452:	20 93 e3 00 	sts	0x00E3, r18	; 0x8000e3 <__TEXT_REGION_LENGTH__+0x7e00e3>
 456:	da c0       	rjmp	.+436    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 458:	89 30       	cpi	r24, 0x09	; 9
 45a:	09 f0       	breq	.+2      	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 45c:	35 c0       	rjmp	.+106    	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 45e:	a1 11       	cpse	r26, r1
 460:	ce c0       	rjmp	.+412    	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 462:	20 93 0d 01 	sts	0x010D, r18	; 0x80010d <usb_configuration>
 466:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <cdc_line_rtsdtr>
 46a:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <transmit_flush_timer>
 46e:	8e ef       	ldi	r24, 0xFE	; 254
 470:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 474:	81 e0       	ldi	r24, 0x01	; 1
 476:	2e e7       	ldi	r18, 0x7E	; 126
 478:	31 e0       	ldi	r19, 0x01	; 1
 47a:	c9 ee       	ldi	r28, 0xE9	; 233
 47c:	d0 e0       	ldi	r29, 0x00	; 0
 47e:	ab ee       	ldi	r26, 0xEB	; 235
 480:	b0 e0       	ldi	r27, 0x00	; 0
 482:	0c ee       	ldi	r16, 0xEC	; 236
 484:	10 e0       	ldi	r17, 0x00	; 0
 486:	6d ee       	ldi	r22, 0xED	; 237
 488:	70 e0       	ldi	r23, 0x00	; 0
 48a:	88 83       	st	Y, r24
 48c:	a9 01       	movw	r20, r18
 48e:	4f 5f       	subi	r20, 0xFF	; 255
 490:	5f 4f       	sbci	r21, 0xFF	; 255
 492:	f9 01       	movw	r30, r18
 494:	94 91       	lpm	r25, Z
 496:	9c 93       	st	X, r25
 498:	99 23       	and	r25, r25
 49a:	61 f0       	breq	.+24     	; 0x4b4 <__LOCK_REGION_LENGTH__+0xb4>
 49c:	fa 01       	movw	r30, r20
 49e:	44 91       	lpm	r20, Z
 4a0:	f8 01       	movw	r30, r16
 4a2:	40 83       	st	Z, r20
 4a4:	f9 01       	movw	r30, r18
 4a6:	32 96       	adiw	r30, 0x02	; 2
 4a8:	94 91       	lpm	r25, Z
 4aa:	2d 5f       	subi	r18, 0xFD	; 253
 4ac:	3f 4f       	sbci	r19, 0xFF	; 255
 4ae:	fb 01       	movw	r30, r22
 4b0:	90 83       	st	Z, r25
 4b2:	01 c0       	rjmp	.+2      	; 0x4b6 <__LOCK_REGION_LENGTH__+0xb6>
 4b4:	9a 01       	movw	r18, r20
 4b6:	8f 5f       	subi	r24, 0xFF	; 255
 4b8:	85 30       	cpi	r24, 0x05	; 5
 4ba:	39 f7       	brne	.-50     	; 0x48a <__LOCK_REGION_LENGTH__+0x8a>
 4bc:	ea ee       	ldi	r30, 0xEA	; 234
 4be:	f0 e0       	ldi	r31, 0x00	; 0
 4c0:	8e e1       	ldi	r24, 0x1E	; 30
 4c2:	80 83       	st	Z, r24
 4c4:	10 82       	st	Z, r1
 4c6:	a2 c0       	rjmp	.+324    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 4c8:	88 30       	cpi	r24, 0x08	; 8
 4ca:	81 f4       	brne	.+32     	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4cc:	a0 38       	cpi	r26, 0x80	; 128
 4ce:	09 f0       	breq	.+2      	; 0x4d2 <__LOCK_REGION_LENGTH__+0xd2>
 4d0:	96 c0       	rjmp	.+300    	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 4d2:	e8 ee       	ldi	r30, 0xE8	; 232
 4d4:	f0 e0       	ldi	r31, 0x00	; 0
 4d6:	80 81       	ld	r24, Z
 4d8:	80 ff       	sbrs	r24, 0
 4da:	fd cf       	rjmp	.-6      	; 0x4d6 <__LOCK_REGION_LENGTH__+0xd6>
 4dc:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <usb_configuration>
 4e0:	80 93 f1 00 	sts	0x00F1, r24	; 0x8000f1 <__TEXT_REGION_LENGTH__+0x7e00f1>
 4e4:	8e ef       	ldi	r24, 0xFE	; 254
 4e6:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 4ea:	90 c0       	rjmp	.+288    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 4ec:	81 32       	cpi	r24, 0x21	; 33
 4ee:	b9 f4       	brne	.+46     	; 0x51e <__LOCK_REGION_LENGTH__+0x11e>
 4f0:	a1 3a       	cpi	r26, 0xA1	; 161
 4f2:	09 f0       	breq	.+2      	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4f4:	84 c0       	rjmp	.+264    	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 4f6:	e8 ee       	ldi	r30, 0xE8	; 232
 4f8:	f0 e0       	ldi	r31, 0x00	; 0
 4fa:	80 81       	ld	r24, Z
 4fc:	80 ff       	sbrs	r24, 0
 4fe:	fd cf       	rjmp	.-6      	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
 500:	e0 e0       	ldi	r30, 0x00	; 0
 502:	f1 e0       	ldi	r31, 0x01	; 1
 504:	27 e0       	ldi	r18, 0x07	; 7
 506:	31 e0       	ldi	r19, 0x01	; 1
 508:	a1 ef       	ldi	r26, 0xF1	; 241
 50a:	b0 e0       	ldi	r27, 0x00	; 0
 50c:	81 91       	ld	r24, Z+
 50e:	8c 93       	st	X, r24
 510:	2e 17       	cp	r18, r30
 512:	3f 07       	cpc	r19, r31
 514:	d9 f7       	brne	.-10     	; 0x50c <__LOCK_REGION_LENGTH__+0x10c>
 516:	8e ef       	ldi	r24, 0xFE	; 254
 518:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 51c:	77 c0       	rjmp	.+238    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 51e:	80 32       	cpi	r24, 0x20	; 32
 520:	d1 f4       	brne	.+52     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 522:	a1 32       	cpi	r26, 0x21	; 33
 524:	09 f0       	breq	.+2      	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 526:	6b c0       	rjmp	.+214    	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 528:	e8 ee       	ldi	r30, 0xE8	; 232
 52a:	f0 e0       	ldi	r31, 0x00	; 0
 52c:	80 81       	ld	r24, Z
 52e:	82 ff       	sbrs	r24, 2
 530:	fd cf       	rjmp	.-6      	; 0x52c <__LOCK_REGION_LENGTH__+0x12c>
 532:	e0 e0       	ldi	r30, 0x00	; 0
 534:	f1 e0       	ldi	r31, 0x01	; 1
 536:	27 e0       	ldi	r18, 0x07	; 7
 538:	31 e0       	ldi	r19, 0x01	; 1
 53a:	a1 ef       	ldi	r26, 0xF1	; 241
 53c:	b0 e0       	ldi	r27, 0x00	; 0
 53e:	8c 91       	ld	r24, X
 540:	81 93       	st	Z+, r24
 542:	2e 17       	cp	r18, r30
 544:	3f 07       	cpc	r19, r31
 546:	d9 f7       	brne	.-10     	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 548:	e8 ee       	ldi	r30, 0xE8	; 232
 54a:	f0 e0       	ldi	r31, 0x00	; 0
 54c:	8b ef       	ldi	r24, 0xFB	; 251
 54e:	80 83       	st	Z, r24
 550:	8e ef       	ldi	r24, 0xFE	; 254
 552:	80 83       	st	Z, r24
 554:	5b c0       	rjmp	.+182    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 556:	82 32       	cpi	r24, 0x22	; 34
 558:	71 f4       	brne	.+28     	; 0x576 <__LOCK_REGION_LENGTH__+0x176>
 55a:	a1 32       	cpi	r26, 0x21	; 33
 55c:	09 f0       	breq	.+2      	; 0x560 <__LOCK_REGION_LENGTH__+0x160>
 55e:	4f c0       	rjmp	.+158    	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 560:	20 93 0a 01 	sts	0x010A, r18	; 0x80010a <cdc_line_rtsdtr>
 564:	e8 ee       	ldi	r30, 0xE8	; 232
 566:	f0 e0       	ldi	r31, 0x00	; 0
 568:	80 81       	ld	r24, Z
 56a:	80 ff       	sbrs	r24, 0
 56c:	fd cf       	rjmp	.-6      	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 56e:	8e ef       	ldi	r24, 0xFE	; 254
 570:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 574:	4b c0       	rjmp	.+150    	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 576:	81 11       	cpse	r24, r1
 578:	1a c0       	rjmp	.+52     	; 0x5ae <__LOCK_REGION_LENGTH__+0x1ae>
 57a:	e8 ee       	ldi	r30, 0xE8	; 232
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	80 81       	ld	r24, Z
 580:	80 ff       	sbrs	r24, 0
 582:	fd cf       	rjmp	.-6      	; 0x57e <__LOCK_REGION_LENGTH__+0x17e>
 584:	a2 38       	cpi	r26, 0x82	; 130
 586:	51 f4       	brne	.+20     	; 0x59c <__LOCK_REGION_LENGTH__+0x19c>
 588:	e9 ee       	ldi	r30, 0xE9	; 233
 58a:	f0 e0       	ldi	r31, 0x00	; 0
 58c:	60 83       	st	Z, r22
 58e:	80 91 eb 00 	lds	r24, 0x00EB	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
 592:	85 fb       	bst	r24, 5
 594:	88 27       	eor	r24, r24
 596:	80 f9       	bld	r24, 0
 598:	10 82       	st	Z, r1
 59a:	01 c0       	rjmp	.+2      	; 0x59e <__LOCK_REGION_LENGTH__+0x19e>
 59c:	80 e0       	ldi	r24, 0x00	; 0
 59e:	e1 ef       	ldi	r30, 0xF1	; 241
 5a0:	f0 e0       	ldi	r31, 0x00	; 0
 5a2:	80 83       	st	Z, r24
 5a4:	10 82       	st	Z, r1
 5a6:	8e ef       	ldi	r24, 0xFE	; 254
 5a8:	80 93 e8 00 	sts	0x00E8, r24	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 5ac:	2f c0       	rjmp	.+94     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5ae:	98 2f       	mov	r25, r24
 5b0:	9d 7f       	andi	r25, 0xFD	; 253
 5b2:	91 30       	cpi	r25, 0x01	; 1
 5b4:	21 f5       	brne	.+72     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5b6:	a2 30       	cpi	r26, 0x02	; 2
 5b8:	11 f5       	brne	.+68     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5ba:	23 2b       	or	r18, r19
 5bc:	01 f5       	brne	.+64     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5be:	46 2f       	mov	r20, r22
 5c0:	4f 77       	andi	r20, 0x7F	; 127
 5c2:	9f ef       	ldi	r25, 0xFF	; 255
 5c4:	94 0f       	add	r25, r20
 5c6:	94 30       	cpi	r25, 0x04	; 4
 5c8:	d0 f4       	brcc	.+52     	; 0x5fe <__LOCK_REGION_LENGTH__+0x1fe>
 5ca:	9e ef       	ldi	r25, 0xFE	; 254
 5cc:	90 93 e8 00 	sts	0x00E8, r25	; 0x8000e8 <__TEXT_REGION_LENGTH__+0x7e00e8>
 5d0:	40 93 e9 00 	sts	0x00E9, r20	; 0x8000e9 <__TEXT_REGION_LENGTH__+0x7e00e9>
 5d4:	83 30       	cpi	r24, 0x03	; 3
 5d6:	21 f4       	brne	.+8      	; 0x5e0 <__LOCK_REGION_LENGTH__+0x1e0>
 5d8:	81 e2       	ldi	r24, 0x21	; 33
 5da:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
 5de:	16 c0       	rjmp	.+44     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5e0:	89 e1       	ldi	r24, 0x19	; 25
 5e2:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
 5e6:	81 e0       	ldi	r24, 0x01	; 1
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	02 c0       	rjmp	.+4      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ec:	88 0f       	add	r24, r24
 5ee:	99 1f       	adc	r25, r25
 5f0:	4a 95       	dec	r20
 5f2:	e2 f7       	brpl	.-8      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5f4:	ea ee       	ldi	r30, 0xEA	; 234
 5f6:	f0 e0       	ldi	r31, 0x00	; 0
 5f8:	80 83       	st	Z, r24
 5fa:	10 82       	st	Z, r1
 5fc:	07 c0       	rjmp	.+14     	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 5fe:	81 e2       	ldi	r24, 0x21	; 33
 600:	80 93 eb 00 	sts	0x00EB, r24	; 0x8000eb <__TEXT_REGION_LENGTH__+0x7e00eb>
 604:	03 c0       	rjmp	.+6      	; 0x60c <__LOCK_REGION_LENGTH__+0x20c>
 606:	6c 93       	st	X, r22
 608:	21 11       	cpse	r18, r1
 60a:	f6 ce       	rjmp	.-532    	; 0x3f8 <__vector_11+0xce>
 60c:	ff 91       	pop	r31
 60e:	ef 91       	pop	r30
 610:	df 91       	pop	r29
 612:	cf 91       	pop	r28
 614:	bf 91       	pop	r27
 616:	af 91       	pop	r26
 618:	9f 91       	pop	r25
 61a:	8f 91       	pop	r24
 61c:	7f 91       	pop	r23
 61e:	6f 91       	pop	r22
 620:	5f 91       	pop	r21
 622:	4f 91       	pop	r20
 624:	3f 91       	pop	r19
 626:	2f 91       	pop	r18
 628:	1f 91       	pop	r17
 62a:	0f 91       	pop	r16
 62c:	0f 90       	pop	r0
 62e:	0f be       	out	0x3f, r0	; 63
 630:	0f 90       	pop	r0
 632:	1f 90       	pop	r1
 634:	18 95       	reti

00000636 <print_P>:
 636:	0f 93       	push	r16
 638:	1f 93       	push	r17
 63a:	cf 93       	push	r28
 63c:	8c 01       	movw	r16, r24
 63e:	0f 5f       	subi	r16, 0xFF	; 255
 640:	1f 4f       	sbci	r17, 0xFF	; 255
 642:	fc 01       	movw	r30, r24
 644:	c4 91       	lpm	r28, Z
 646:	cc 23       	and	r28, r28
 648:	71 f0       	breq	.+28     	; 0x666 <print_P+0x30>
 64a:	ca 30       	cpi	r28, 0x0A	; 10
 64c:	19 f4       	brne	.+6      	; 0x654 <print_P+0x1e>
 64e:	8d e0       	ldi	r24, 0x0D	; 13
 650:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <m_usb_tx_char>
 654:	8c 2f       	mov	r24, r28
 656:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <m_usb_tx_char>
 65a:	f8 01       	movw	r30, r16
 65c:	c4 91       	lpm	r28, Z
 65e:	0f 5f       	subi	r16, 0xFF	; 255
 660:	1f 4f       	sbci	r17, 0xFF	; 255
 662:	c1 11       	cpse	r28, r1
 664:	f2 cf       	rjmp	.-28     	; 0x64a <print_P+0x14>
 666:	cf 91       	pop	r28
 668:	1f 91       	pop	r17
 66a:	0f 91       	pop	r16
 66c:	08 95       	ret

0000066e <m_usb_tx_int>:
 66e:	ef 92       	push	r14
 670:	ff 92       	push	r15
 672:	0f 93       	push	r16
 674:	1f 93       	push	r17
 676:	cf 93       	push	r28
 678:	df 93       	push	r29
 67a:	cd b7       	in	r28, 0x3d	; 61
 67c:	de b7       	in	r29, 0x3e	; 62
 67e:	27 97       	sbiw	r28, 0x07	; 7
 680:	0f b6       	in	r0, 0x3f	; 63
 682:	f8 94       	cli
 684:	de bf       	out	0x3e, r29	; 62
 686:	0f be       	out	0x3f, r0	; 63
 688:	cd bf       	out	0x3d, r28	; 61
 68a:	8e 01       	movw	r16, r28
 68c:	0f 5f       	subi	r16, 0xFF	; 255
 68e:	1f 4f       	sbci	r17, 0xFF	; 255
 690:	27 e0       	ldi	r18, 0x07	; 7
 692:	f8 01       	movw	r30, r16
 694:	11 92       	st	Z+, r1
 696:	2a 95       	dec	r18
 698:	e9 f7       	brne	.-6      	; 0x694 <m_usb_tx_int+0x26>
 69a:	4a e0       	ldi	r20, 0x0A	; 10
 69c:	b8 01       	movw	r22, r16
 69e:	0e 94 c9 04 	call	0x992	; 0x992 <__itoa_ncheck>
 6a2:	7e 01       	movw	r14, r28
 6a4:	f8 e0       	ldi	r31, 0x08	; 8
 6a6:	ef 0e       	add	r14, r31
 6a8:	f1 1c       	adc	r15, r1
 6aa:	f8 01       	movw	r30, r16
 6ac:	81 91       	ld	r24, Z+
 6ae:	8f 01       	movw	r16, r30
 6b0:	81 11       	cpse	r24, r1
 6b2:	0e 94 fc 00 	call	0x1f8	; 0x1f8 <m_usb_tx_char>
 6b6:	0e 15       	cp	r16, r14
 6b8:	1f 05       	cpc	r17, r15
 6ba:	b9 f7       	brne	.-18     	; 0x6aa <m_usb_tx_int+0x3c>
 6bc:	27 96       	adiw	r28, 0x07	; 7
 6be:	0f b6       	in	r0, 0x3f	; 63
 6c0:	f8 94       	cli
 6c2:	de bf       	out	0x3e, r29	; 62
 6c4:	0f be       	out	0x3f, r0	; 63
 6c6:	cd bf       	out	0x3d, r28	; 61
 6c8:	df 91       	pop	r29
 6ca:	cf 91       	pop	r28
 6cc:	1f 91       	pop	r17
 6ce:	0f 91       	pop	r16
 6d0:	ff 90       	pop	r15
 6d2:	ef 90       	pop	r14
 6d4:	08 95       	ret

000006d6 <pulse>:
    }
}

void pulse(void) {

	set(DDRB,6); // set B6 output for pulse, timer1
 6d6:	26 9a       	sbi	0x04, 6	; 4
	
	set(TCCR1B,WGM13);
 6d8:	e1 e8       	ldi	r30, 0x81	; 129
 6da:	f0 e0       	ldi	r31, 0x00	; 0
 6dc:	80 81       	ld	r24, Z
 6de:	80 61       	ori	r24, 0x10	; 16
 6e0:	80 83       	st	Z, r24
	set(TCCR1B,WGM12);
 6e2:	80 81       	ld	r24, Z
 6e4:	88 60       	ori	r24, 0x08	; 8
 6e6:	80 83       	st	Z, r24
	set(TCCR1A,WGM11);
 6e8:	a0 e8       	ldi	r26, 0x80	; 128
 6ea:	b0 e0       	ldi	r27, 0x00	; 0
 6ec:	8c 91       	ld	r24, X
 6ee:	82 60       	ori	r24, 0x02	; 2
 6f0:	8c 93       	st	X, r24
	set(TCCR1A,WGM10); // up to OCR1A
 6f2:	8c 91       	ld	r24, X
 6f4:	81 60       	ori	r24, 0x01	; 1
 6f6:	8c 93       	st	X, r24

	set(TCCR1A,COM1B1);
 6f8:	8c 91       	ld	r24, X
 6fa:	80 62       	ori	r24, 0x20	; 32
 6fc:	8c 93       	st	X, r24
	clear(TCCR1A,COM1B0); // toggle on compare match
 6fe:	8c 91       	ld	r24, X
 700:	8f 7e       	andi	r24, 0xEF	; 239
 702:	8c 93       	st	X, r24

//	OCR1A = 65535; // 80 ticks for 5 us at 16MHz
//	OCR1B = 160;
	
	OCR1A = 65535; 
 704:	8f ef       	ldi	r24, 0xFF	; 255
 706:	9f ef       	ldi	r25, 0xFF	; 255
 708:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
 70c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    OCR1B = 20;	// for 2 MHz
 710:	84 e1       	ldi	r24, 0x14	; 20
 712:	90 e0       	ldi	r25, 0x00	; 0
 714:	90 93 8b 00 	sts	0x008B, r25	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
 718:	80 93 8a 00 	sts	0x008A, r24	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
	
	clear(TCCR1B,CS12);
 71c:	80 81       	ld	r24, Z
 71e:	8b 7f       	andi	r24, 0xFB	; 251
 720:	80 83       	st	Z, r24
	set(TCCR1B,CS11);
 722:	80 81       	ld	r24, Z
 724:	82 60       	ori	r24, 0x02	; 2
 726:	80 83       	st	Z, r24
	clear(TCCR1B,CS10); // clock prescaler /8
 728:	80 81       	ld	r24, Z
 72a:	8e 7f       	andi	r24, 0xFE	; 254
 72c:	80 83       	st	Z, r24
 72e:	08 95       	ret

00000730 <adcsetup>:
	*/
	
}


void adcsetup (void) {
 730:	cf 93       	push	r28
 732:	df 93       	push	r29

	clear(ADMUX,REFS1);
 734:	ac e7       	ldi	r26, 0x7C	; 124
 736:	b0 e0       	ldi	r27, 0x00	; 0
 738:	8c 91       	ld	r24, X
 73a:	8f 77       	andi	r24, 0x7F	; 127
 73c:	8c 93       	st	X, r24
	set(ADMUX,REFS0); // use AVcc as reference voltage; use ext capacitor
 73e:	8c 91       	ld	r24, X
 740:	80 64       	ori	r24, 0x40	; 64
 742:	8c 93       	st	X, r24

	set(ADCSRA,ADPS2);
 744:	ea e7       	ldi	r30, 0x7A	; 122
 746:	f0 e0       	ldi	r31, 0x00	; 0
 748:	80 81       	ld	r24, Z
 74a:	84 60       	ori	r24, 0x04	; 4
 74c:	80 83       	st	Z, r24
	set(ADCSRA,ADPS1);
 74e:	80 81       	ld	r24, Z
 750:	82 60       	ori	r24, 0x02	; 2
 752:	80 83       	st	Z, r24
	set(ADCSRA,ADPS0); // prescaler /128 = 125kHz
 754:	80 81       	ld	r24, Z
 756:	81 60       	ori	r24, 0x01	; 1
 758:	80 83       	st	Z, r24

	clear(ADCSRB,MUX5);
 75a:	cb e7       	ldi	r28, 0x7B	; 123
 75c:	d0 e0       	ldi	r29, 0x00	; 0
 75e:	88 81       	ld	r24, Y
 760:	8f 7d       	andi	r24, 0xDF	; 223
 762:	88 83       	st	Y, r24
	clear(ADMUX,MUX2);
 764:	8c 91       	ld	r24, X
 766:	8b 7f       	andi	r24, 0xFB	; 251
 768:	8c 93       	st	X, r24
	clear(ADMUX,MUX1);
 76a:	8c 91       	ld	r24, X
 76c:	8d 7f       	andi	r24, 0xFD	; 253
 76e:	8c 93       	st	X, r24
	clear(ADMUX,MUX0); // channel selection, ADC0
 770:	8c 91       	ld	r24, X
 772:	8e 7f       	andi	r24, 0xFE	; 254
 774:	8c 93       	st	X, r24
	
	set(ADCSRA,ADATE); // en/dis-able auto trigger / free-run ??
 776:	80 81       	ld	r24, Z
 778:	80 62       	ori	r24, 0x20	; 32
 77a:	80 83       	st	Z, r24
	set(ADCSRA,ADIE); // enable adc interrupt
 77c:	80 81       	ld	r24, Z
 77e:	88 60       	ori	r24, 0x08	; 8
 780:	80 83       	st	Z, r24
	clear(DIDR0,ADC0D); // disable digital input for ADC0
 782:	ae e7       	ldi	r26, 0x7E	; 126
 784:	b0 e0       	ldi	r27, 0x00	; 0
 786:	8c 91       	ld	r24, X
 788:	8e 7f       	andi	r24, 0xFE	; 254
 78a:	8c 93       	st	X, r24

	set(ADCSRA,ADEN); // ADC system enable
 78c:	80 81       	ld	r24, Z
 78e:	80 68       	ori	r24, 0x80	; 128
 790:	80 83       	st	Z, r24
	set(ADCSRA,ADSC); // start conversion // will need to set every time if not free running
 792:	80 81       	ld	r24, Z
 794:	80 64       	ori	r24, 0x40	; 64
 796:	80 83       	st	Z, r24

}
 798:	df 91       	pop	r29
 79a:	cf 91       	pop	r28
 79c:	08 95       	ret

0000079e <timer0setup>:

void timer0setup(void){

	set(DDRB,7); // set up output pin for timer0
 79e:	27 9a       	sbi	0x04, 7	; 4

	clear(TCCR0B,WGM02);
 7a0:	85 b5       	in	r24, 0x25	; 37
 7a2:	87 7f       	andi	r24, 0xF7	; 247
 7a4:	85 bd       	out	0x25, r24	; 37
	set(TCCR0A,WGM01);
 7a6:	84 b5       	in	r24, 0x24	; 36
 7a8:	82 60       	ori	r24, 0x02	; 2
 7aa:	84 bd       	out	0x24, r24	; 36
	clear(TCCR0A,WGM00); // mode 2, CTC @ OCRA [pg106]
 7ac:	84 b5       	in	r24, 0x24	; 36
 7ae:	8e 7f       	andi	r24, 0xFE	; 254
 7b0:	84 bd       	out	0x24, r24	; 36

	clear(TCCR0A,COM0A1);
 7b2:	84 b5       	in	r24, 0x24	; 36
 7b4:	8f 77       	andi	r24, 0x7F	; 127
 7b6:	84 bd       	out	0x24, r24	; 36
	set(TCCR0A,COM0A0); // toggle OC0A on compare match [pg104]
 7b8:	84 b5       	in	r24, 0x24	; 36
 7ba:	80 64       	ori	r24, 0x40	; 64
 7bc:	84 bd       	out	0x24, r24	; 36

	OCR0A = 125;
 7be:	8d e7       	ldi	r24, 0x7D	; 125
 7c0:	87 bd       	out	0x27, r24	; 39

	clear(TCCR0B,CS02);
 7c2:	85 b5       	in	r24, 0x25	; 37
 7c4:	8b 7f       	andi	r24, 0xFB	; 251
 7c6:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B,CS01);
 7c8:	85 b5       	in	r24, 0x25	; 37
 7ca:	82 60       	ori	r24, 0x02	; 2
 7cc:	85 bd       	out	0x25, r24	; 37
	set(TCCR0B,CS00); // prescaler /64 = 250kHz
 7ce:	85 b5       	in	r24, 0x25	; 37
 7d0:	81 60       	ori	r24, 0x01	; 1
 7d2:	85 bd       	out	0x25, r24	; 37
 7d4:	08 95       	ret

000007d6 <main>:
void pulse(void);
void DAC(int);

int main(void)
{
	sei(); // enable interrupts
 7d6:	78 94       	sei
	clockdivide(0);
 7d8:	e1 e6       	ldi	r30, 0x61	; 97
 7da:	f0 e0       	ldi	r31, 0x00	; 0
 7dc:	80 e8       	ldi	r24, 0x80	; 128
 7de:	80 83       	st	Z, r24
 7e0:	10 82       	st	Z, r1
	usb_init(); // serial comm
 7e2:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <m_usb_init>
	
	adcsetup();
 7e6:	0e 94 98 03 	call	0x730	; 0x730 <adcsetup>
	timer0setup();
 7ea:	0e 94 cf 03 	call	0x79e	; 0x79e <timer0setup>
	// set(DDRB,7); // set up output pin for timer0
	
	// set(DDRB,2); // set B2 as output, aka pin 10
	// set(DDRB,5);
	
	clear(DDRD,4); // clear D4 for input capture (is this necessary)
 7ee:	54 98       	cbi	0x0a, 4	; 10
	pulse();
 7f0:	0e 94 6b 03 	call	0x6d6	; 0x6d6 <pulse>
	
	set(TCCR1B,ICES1); // input capture ICP1 rising edge, ICP1 multiplexed on B1
 7f4:	e1 e8       	ldi	r30, 0x81	; 129
 7f6:	f0 e0       	ldi	r31, 0x00	; 0
 7f8:	80 81       	ld	r24, Z
 7fa:	80 64       	ori	r24, 0x40	; 64
 7fc:	80 83       	st	Z, r24
	// this will set ICF1
	
	set(TIMSK1,ICIE1); // timer1 input capture interrupt enable
 7fe:	ef e6       	ldi	r30, 0x6F	; 111
 800:	f0 e0       	ldi	r31, 0x00	; 0
 802:	80 81       	ld	r24, Z
 804:	80 62       	ori	r24, 0x20	; 32
 806:	80 83       	st	Z, r24
	// corresponding interrupt vector is executed when the ICF1 flag in TIFR1 is set

    while (1) 
    {
		if(flag == 1){ // 
			if(check(TCCR1B,ICES1)){
 808:	c1 e8       	ldi	r28, 0x81	; 129
 80a:	d0 e0       	ldi	r29, 0x00	; 0
				risetime = ICR1;
				clear(TCCR1B,ICES1);
				} else {
				falltime = ICR1;
 80c:	06 e8       	ldi	r16, 0x86	; 134
 80e:	10 e0       	ldi	r17, 0x00	; 0
	set(TIMSK1,ICIE1); // timer1 input capture interrupt enable
	// corresponding interrupt vector is executed when the ICF1 flag in TIFR1 is set

    while (1) 
    {
		if(flag == 1){ // 
 810:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <__data_end>
 814:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <__data_end+0x1>
 818:	01 97       	sbiw	r24, 0x01	; 1
 81a:	09 f0       	breq	.+2      	; 0x81e <main+0x48>
 81c:	48 c0       	rjmp	.+144    	; 0x8ae <main+0xd8>
			if(check(TCCR1B,ICES1)){
 81e:	88 81       	ld	r24, Y
 820:	86 ff       	sbrs	r24, 6
 822:	0b c0       	rjmp	.+22     	; 0x83a <main+0x64>
				risetime = ICR1;
 824:	f8 01       	movw	r30, r16
 826:	80 81       	ld	r24, Z
 828:	91 81       	ldd	r25, Z+1	; 0x01
 82a:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <risetime+0x1>
 82e:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <risetime>
				clear(TCCR1B,ICES1);
 832:	88 81       	ld	r24, Y
 834:	8f 7b       	andi	r24, 0xBF	; 191
 836:	88 83       	st	Y, r24
 838:	3a c0       	rjmp	.+116    	; 0x8ae <main+0xd8>
				} else {
				falltime = ICR1;
 83a:	f8 01       	movw	r30, r16
 83c:	80 81       	ld	r24, Z
 83e:	91 81       	ldd	r25, Z+1	; 0x01
 840:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <falltime+0x1>
 844:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <falltime>

				m_usb_tx_string("risetime: ");
 848:	8a ec       	ldi	r24, 0xCA	; 202
 84a:	90 e0       	ldi	r25, 0x00	; 0
 84c:	0e 94 1b 03 	call	0x636	; 0x636 <print_P>
				m_usb_tx_int(risetime);
 850:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <risetime>
 854:	90 91 11 01 	lds	r25, 0x0111	; 0x800111 <risetime+0x1>
 858:	0e 94 37 03 	call	0x66e	; 0x66e <m_usb_tx_int>
				m_usb_tx_string("\n");
 85c:	88 ec       	ldi	r24, 0xC8	; 200
 85e:	90 e0       	ldi	r25, 0x00	; 0
 860:	0e 94 1b 03 	call	0x636	; 0x636 <print_P>
				
				m_usb_tx_string("falltime: ");
 864:	8d eb       	ldi	r24, 0xBD	; 189
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	0e 94 1b 03 	call	0x636	; 0x636 <print_P>
				m_usb_tx_int(falltime);
 86c:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <falltime>
 870:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <falltime+0x1>
 874:	0e 94 37 03 	call	0x66e	; 0x66e <m_usb_tx_int>
				m_usb_tx_string("\n");
 878:	8b eb       	ldi	r24, 0xBB	; 187
 87a:	90 e0       	ldi	r25, 0x00	; 0
 87c:	0e 94 1b 03 	call	0x636	; 0x636 <print_P>
				
				m_usb_tx_string("difference: ");
 880:	8e ea       	ldi	r24, 0xAE	; 174
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	0e 94 1b 03 	call	0x636	; 0x636 <print_P>
				m_usb_tx_int(falltime-risetime);
 888:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <falltime>
 88c:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <falltime+0x1>
 890:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <risetime>
 894:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <risetime+0x1>
 898:	82 1b       	sub	r24, r18
 89a:	93 0b       	sbc	r25, r19
 89c:	0e 94 37 03 	call	0x66e	; 0x66e <m_usb_tx_int>
				m_usb_tx_string("\n");
 8a0:	8c ea       	ldi	r24, 0xAC	; 172
 8a2:	90 e0       	ldi	r25, 0x00	; 0
 8a4:	0e 94 1b 03 	call	0x636	; 0x636 <print_P>
		
				set(TCCR1B,ICES1);
 8a8:	88 81       	ld	r24, Y
 8aa:	80 64       	ori	r24, 0x40	; 64
 8ac:	88 83       	st	Y, r24
			}
		}

		flag = 0;
 8ae:	10 92 09 01 	sts	0x0109, r1	; 0x800109 <__data_end+0x1>
 8b2:	10 92 08 01 	sts	0x0108, r1	; 0x800108 <__data_end>
    }
 8b6:	ac cf       	rjmp	.-168    	; 0x810 <main+0x3a>

000008b8 <__vector_16>:
	could change it in the ADIF interrupt

	*/
}

ISR(TIMER1_CAPT_vect){
 8b8:	1f 92       	push	r1
 8ba:	0f 92       	push	r0
 8bc:	0f b6       	in	r0, 0x3f	; 63
 8be:	0f 92       	push	r0
 8c0:	11 24       	eor	r1, r1
 8c2:	8f 93       	push	r24
 8c4:	9f 93       	push	r25
// // 		m_usb_tx_string("\n"); // you shouldn't be printing in an interrupt myles, come on, you know better 
// 	
// 		set(TCCR1B,ICES1);
// 	}

	flag = 1;
 8c6:	81 e0       	ldi	r24, 0x01	; 1
 8c8:	90 e0       	ldi	r25, 0x00	; 0
 8ca:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <__data_end+0x1>
 8ce:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <__data_end>

}
 8d2:	9f 91       	pop	r25
 8d4:	8f 91       	pop	r24
 8d6:	0f 90       	pop	r0
 8d8:	0f be       	out	0x3f, r0	; 63
 8da:	0f 90       	pop	r0
 8dc:	1f 90       	pop	r1
 8de:	18 95       	reti

000008e0 <__vector_29>:

ISR(ADC_vect){
 8e0:	1f 92       	push	r1
 8e2:	0f 92       	push	r0
 8e4:	0f b6       	in	r0, 0x3f	; 63
 8e6:	0f 92       	push	r0
 8e8:	11 24       	eor	r1, r1
 8ea:	2f 93       	push	r18
 8ec:	8f 93       	push	r24
 8ee:	9f 93       	push	r25
	*/

	// m_usb_tx_int(ADC);
	// m_usb_tx_string("\n");

	if(ADC < 128){
 8f0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 8f4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 8f8:	80 38       	cpi	r24, 0x80	; 128
 8fa:	91 05       	cpc	r25, r1
 8fc:	18 f4       	brcc	.+6      	; 0x904 <__vector_29+0x24>
		OCR0A = 125;
 8fe:	8d e7       	ldi	r24, 0x7D	; 125
 900:	87 bd       	out	0x27, r24	; 39
 902:	3f c0       	rjmp	.+126    	; 0x982 <__vector_29+0xa2>
	} else if (ADC < 128*2) {
 904:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 908:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 90c:	8f 3f       	cpi	r24, 0xFF	; 255
 90e:	91 05       	cpc	r25, r1
 910:	09 f0       	breq	.+2      	; 0x914 <__vector_29+0x34>
 912:	18 f4       	brcc	.+6      	; 0x91a <__vector_29+0x3a>
		OCR0A = 111;
 914:	8f e6       	ldi	r24, 0x6F	; 111
 916:	87 bd       	out	0x27, r24	; 39
 918:	34 c0       	rjmp	.+104    	; 0x982 <__vector_29+0xa2>
	} else if (ADC < 128*3) {
 91a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 91e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 922:	80 38       	cpi	r24, 0x80	; 128
 924:	91 40       	sbci	r25, 0x01	; 1
 926:	18 f4       	brcc	.+6      	; 0x92e <__vector_29+0x4e>
		OCR0A = 99;
 928:	83 e6       	ldi	r24, 0x63	; 99
 92a:	87 bd       	out	0x27, r24	; 39
 92c:	2a c0       	rjmp	.+84     	; 0x982 <__vector_29+0xa2>
	} else if (ADC < 128*4) {
 92e:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 932:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 936:	81 15       	cp	r24, r1
 938:	92 40       	sbci	r25, 0x02	; 2
 93a:	18 f4       	brcc	.+6      	; 0x942 <__vector_29+0x62>
		OCR0A = 94;
 93c:	8e e5       	ldi	r24, 0x5E	; 94
 93e:	87 bd       	out	0x27, r24	; 39
 940:	20 c0       	rjmp	.+64     	; 0x982 <__vector_29+0xa2>
	} else if (ADC < 128*5) {
 942:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 946:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 94a:	80 38       	cpi	r24, 0x80	; 128
 94c:	92 40       	sbci	r25, 0x02	; 2
 94e:	18 f4       	brcc	.+6      	; 0x956 <__vector_29+0x76>
		OCR0A = 83;
 950:	83 e5       	ldi	r24, 0x53	; 83
 952:	87 bd       	out	0x27, r24	; 39
 954:	16 c0       	rjmp	.+44     	; 0x982 <__vector_29+0xa2>
	} else if (ADC < 128*6) {
 956:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 95a:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 95e:	81 15       	cp	r24, r1
 960:	93 40       	sbci	r25, 0x03	; 3
 962:	18 f4       	brcc	.+6      	; 0x96a <__vector_29+0x8a>
		OCR0A = 74;
 964:	8a e4       	ldi	r24, 0x4A	; 74
 966:	87 bd       	out	0x27, r24	; 39
 968:	0c c0       	rjmp	.+24     	; 0x982 <__vector_29+0xa2>
	} else if (ADC < 128*7) {
 96a:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 96e:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 972:	80 38       	cpi	r24, 0x80	; 128
 974:	93 40       	sbci	r25, 0x03	; 3
 976:	18 f4       	brcc	.+6      	; 0x97e <__vector_29+0x9e>
		OCR0A = 66;
 978:	82 e4       	ldi	r24, 0x42	; 66
 97a:	87 bd       	out	0x27, r24	; 39
 97c:	02 c0       	rjmp	.+4      	; 0x982 <__vector_29+0xa2>
	} else {
		OCR0A = 62;
 97e:	8e e3       	ldi	r24, 0x3E	; 62
 980:	87 bd       	out	0x27, r24	; 39
	}

}
 982:	9f 91       	pop	r25
 984:	8f 91       	pop	r24
 986:	2f 91       	pop	r18
 988:	0f 90       	pop	r0
 98a:	0f be       	out	0x3f, r0	; 63
 98c:	0f 90       	pop	r0
 98e:	1f 90       	pop	r1
 990:	18 95       	reti

00000992 <__itoa_ncheck>:
 992:	bb 27       	eor	r27, r27
 994:	4a 30       	cpi	r20, 0x0A	; 10
 996:	31 f4       	brne	.+12     	; 0x9a4 <__itoa_ncheck+0x12>
 998:	99 23       	and	r25, r25
 99a:	22 f4       	brpl	.+8      	; 0x9a4 <__itoa_ncheck+0x12>
 99c:	bd e2       	ldi	r27, 0x2D	; 45
 99e:	90 95       	com	r25
 9a0:	81 95       	neg	r24
 9a2:	9f 4f       	sbci	r25, 0xFF	; 255
 9a4:	0c 94 d5 04 	jmp	0x9aa	; 0x9aa <__utoa_common>

000009a8 <__utoa_ncheck>:
 9a8:	bb 27       	eor	r27, r27

000009aa <__utoa_common>:
 9aa:	fb 01       	movw	r30, r22
 9ac:	55 27       	eor	r21, r21
 9ae:	aa 27       	eor	r26, r26
 9b0:	88 0f       	add	r24, r24
 9b2:	99 1f       	adc	r25, r25
 9b4:	aa 1f       	adc	r26, r26
 9b6:	a4 17       	cp	r26, r20
 9b8:	10 f0       	brcs	.+4      	; 0x9be <__utoa_common+0x14>
 9ba:	a4 1b       	sub	r26, r20
 9bc:	83 95       	inc	r24
 9be:	50 51       	subi	r21, 0x10	; 16
 9c0:	b9 f7       	brne	.-18     	; 0x9b0 <__utoa_common+0x6>
 9c2:	a0 5d       	subi	r26, 0xD0	; 208
 9c4:	aa 33       	cpi	r26, 0x3A	; 58
 9c6:	08 f0       	brcs	.+2      	; 0x9ca <__utoa_common+0x20>
 9c8:	a9 5d       	subi	r26, 0xD9	; 217
 9ca:	a1 93       	st	Z+, r26
 9cc:	00 97       	sbiw	r24, 0x00	; 0
 9ce:	79 f7       	brne	.-34     	; 0x9ae <__utoa_common+0x4>
 9d0:	b1 11       	cpse	r27, r1
 9d2:	b1 93       	st	Z+, r27
 9d4:	11 92       	st	Z+, r1
 9d6:	cb 01       	movw	r24, r22
 9d8:	0c 94 ee 04 	jmp	0x9dc	; 0x9dc <strrev>

000009dc <strrev>:
 9dc:	dc 01       	movw	r26, r24
 9de:	fc 01       	movw	r30, r24
 9e0:	67 2f       	mov	r22, r23
 9e2:	71 91       	ld	r23, Z+
 9e4:	77 23       	and	r23, r23
 9e6:	e1 f7       	brne	.-8      	; 0x9e0 <strrev+0x4>
 9e8:	32 97       	sbiw	r30, 0x02	; 2
 9ea:	04 c0       	rjmp	.+8      	; 0x9f4 <strrev+0x18>
 9ec:	7c 91       	ld	r23, X
 9ee:	6d 93       	st	X+, r22
 9f0:	70 83       	st	Z, r23
 9f2:	62 91       	ld	r22, -Z
 9f4:	ae 17       	cp	r26, r30
 9f6:	bf 07       	cpc	r27, r31
 9f8:	c8 f3       	brcs	.-14     	; 0x9ec <strrev+0x10>
 9fa:	08 95       	ret

000009fc <_exit>:
 9fc:	f8 94       	cli

000009fe <__stop_program>:
 9fe:	ff cf       	rjmp	.-2      	; 0x9fe <__stop_program>
